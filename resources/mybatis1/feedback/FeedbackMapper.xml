<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FeedbackMapper">
	
	<!--表名 -->
	<sql id="tableName">
		FB_FEEDBACK
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		SCHOOL_ADDRESS1,	
		SCHOOL_ADDRESS2,	
		CONTACT_PHONE,	
		PHONE_CONTACT,	
		PRODUCT_SEQ,	
		QUESTION_NAME,	
		OS,	
		SOFTWARE_VERSION,	
		SOFTWARE_NAME,	
		EXCEPTION_NUM,	
		DESCRIPTION,	
		PROBLEM_PATH,	
		CUSTOMER_CODE,	
		PERSON_LIABLE,	
		CREATE_DATE,	
		PROCESSING_DATE,	
		PRODUCT_TYPE,	
		PRODUCT_MODEL,	
		TIME_PURCHASE,	
		BATTERY_BRAND,	
		BASE_STATION,	
		ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{SCHOOL_ADDRESS1},	
		#{SCHOOL_ADDRESS2},	
		#{CONTACT_PHONE},	
		#{PHONE_CONTACT},	
		#{PRODUCT_SEQ},	
		#{QUESTION_NAME},	
		#{OS},	
		#{SOFTWARE_VERSION},	
		#{SOFTWARE_NAME},	
		#{EXCEPTION_NUM},	
		#{DESCRIPTION},	
		#{PROBLEM_PATH},	
		#{CUSTOMER_CODE},	
		#{PERSON_LIABLE},	
		#{CREATE_DATE},	
		#{PROCESSING_DATE},	
		#{PRODUCT_TYPE},	
		#{PRODUCT_MODEL},	
		#{TIME_PURCHASE},	
		#{BATTERY_BRAND},	
		#{BASE_STATION},	
		#{ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
			SCHOOL_ADDRESS1,	
			SCHOOL_ADDRESS2,	
			CONTACT_PHONE,	
			PHONE_CONTACT,	
			PRODUCT_SEQ,	
			QUESTION_NAME,	
			OS,	
			SOFTWARE_VERSION,	
			SOFTWARE_NAME,	
			EXCEPTION_NUM,	
			DESCRIPTION,	
			PROBLEM_PATH,	
			CUSTOMER_CODE,	
			PERSON_LIABLE,	
			CREATE_DATE,	
			PROCESSING_DATE,	
			PRODUCT_TYPE,	
			TIME_PURCHASE,	
			BATTERY_BRAND,	
			BASE_STATION,	
			PRODUCT_MODEL
		) values (
		#{SCHOOL_ADDRESS1},	
		#{SCHOOL_ADDRESS2},	
		#{CONTACT_PHONE},	
		#{PHONE_CONTACT},	
		#{PRODUCT_SEQ},	
		#{QUESTION_NAME},	
		#{OS},	
		#{SOFTWARE_VERSION},	
		#{SOFTWARE_NAME},	
		#{EXCEPTION_NUM},	
		#{DESCRIPTION},	
		#{PROBLEM_PATH},	
		#{CUSTOMER_CODE},	
		#{PERSON_LIABLE},	
		#{CREATE_DATE},	
		#{PROCESSING_DATE},	
		#{PRODUCT_TYPE},
		#{TIME_PURCHASE},	
		#{BATTERY_BRAND},	
		#{BASE_STATION},	
		#{PRODUCT_MODEL}
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			ID = #{ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			SCHOOL_ADDRESS1 = #{SCHOOL_ADDRESS1},
			SCHOOL_ADDRESS2 = #{SCHOOL_ADDRESS2},
			CONTACT_PHONE = #{CONTACT_PHONE},
			PHONE_CONTACT = #{PHONE_CONTACT},
			PRODUCT_SEQ = #{PRODUCT_SEQ},
			QUESTION_NAME = #{QUESTION_NAME},
			OS = #{OS},
			SOFTWARE_VERSION = #{SOFTWARE_VERSION},
			SOFTWARE_NAME = #{SOFTWARE_NAME},
			EXCEPTION_NUM = #{EXCEPTION_NUM},
			DESCRIPTION = #{DESCRIPTION},
			PROBLEM_PATH = #{PROBLEM_PATH},
			CUSTOMER_CODE = #{CUSTOMER_CODE},
			PERSON_LIABLE = #{PERSON_LIABLE},
			CREATE_DATE = #{CREATE_DATE},
			PROCESSING_DATE = #{PROCESSING_DATE},
			PRODUCT_TYPE = #{PRODUCT_TYPE},
			PRODUCT_MODEL = #{PRODUCT_MODEL},
			TIME_PURCHASE = #{TIME_PURCHASE},
			BATTERY_BRAND = #{BATTERY_BRAND},
			BASE_STATION = #{BASE_STATION},
			ID = #{ID}
		where 
		ID = #{ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			ID = #{ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>